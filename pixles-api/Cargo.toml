[package]
name = "pixles-api"
version = "0.1.0"
edition = "2024"
publish = false

[workspace]
members = [".", "auth", "graphql", "service", "entity", "metadata", "migration"]

[dependencies]
pixles-api-auth = { path = "./auth", optional = true }
pixles-api-docs = { path = "./docs", optional = true }
pixles-api-graphql = { path = "./graphql", optional = true }
pixles-api-upload = { path = "./upload", optional = true }
pixles-api-environment = { path = "./environment" }
pixles-api-metadata = { path = "./metadata", optional = true }
pixles-api-migration = { path = "./migration" }
axum = { workspace = true }
color-eyre = "0.6.3"
eyre = { workspace = true }
listenfd = "1.0.1"
sea-orm = { workspace = true }
tokio = { workspace = true }
tower-http = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { version = "0.3.18", features = ["env-filter", "json"] }
futures-util = "0.3.31"
async-stream = "0.3.6"
serde = { workspace = true }
utoipa = { workspace = true }
utoipa-axum = { workspace = true }

[workspace.dependencies]
anyhow = "1.0.98"
argon2 = "0.5.3"
axum = { version = "0.8.4", features = ["http2", "macros"] }
base64 = "0.22.1"
chrono = { version = "0.4.38", features = ["serde"] }
eyre = "0.6.12"
futures-util = "0.3.31"
hyper = { version = "1.6.0", features = ["full"] }
jsonwebtoken = "9.3.0"
nanoid = "0.4.0"
ring = "0.17.14"
sea-orm = { version = "1.1.10", features = [
    "sqlx-postgres",
    "runtime-tokio-rustls",
    "debug-print",
] }
sea-orm-migration = { version = "1.1.10", features = [
    "sqlx-postgres",
    "runtime-tokio-rustls",
] }
secrecy = { version = "0.10.3", features = ["serde"] }
serde = { version = "1.0.215", features = ["derive"] }
serde_json = "1.0.133"
thiserror = "2.0.12"
tokio = { version = "1.47.0", features = ["full"] }
utoipa = { version = "5.3.1", features = [
    "axum_extras",
    "chrono",
    "debug",
    "url",
    "uuid",
    "macros",
] }
utoipa-axum = { version = "0.2.0" }
utoipa-scalar = { version = "0.3.0", features = ["axum"] }
uuid = { version = "1.11.0", features = ["v4"] }
tower-http = { version = "0.6.1", features = ["cors"] }
tracing = "0.1.40"

[profile.release]
lto = "thin"
codegen-units = 1

[features]
default = ["auth", "graphql", "upload", "metadata"]
auth = ["pixles-api-auth", "pixles-api-environment/auth"]
graphql = ["pixles-api-graphql", "pixles-api-environment/graphql"]
metadata = ["pixles-api-metadata", "pixles-api-environment/metadata"]
upload = [
    "pixles-api-upload",
    "pixles-api-docs/upload",
    "pixles-api-environment/upload",
]
openapi = ["pixles-api-docs/openapi"]
